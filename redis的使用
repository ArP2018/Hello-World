快速开始
安装     https://redis.io/topics/quickstart
redis不支持windows的安装，linux上的下载安装方式如下:
wget http://download.redis.io/redis-stable.tar.gz
tar xvzf redis-stable.tar.gz
cd redis-stable
make


It is a good idea to copy both the Redis server and the command line interface in proper places, either manually using the following commands:
  sudo cp src/redis-server /usr/local/bin/
  sudo cp src/redis-cli /usr/local/bin/


如果安装的时候直接make install 则可以跳过以上步骤

输入命令redis-server即可启动redis服务
检测redis是否已经正常工作
$ redis-cli ping
PONG

python中的运用
>>> import redis
>>> c = redis.StrictConnction('localhost')
>>> c.set('myteam', 'GSW')
True
>>> c.get('myteam')
'GSW'
>>> c1 = redis.StrictRedis('localhost', db=1)
>>> c1.get('myteam')
>>> c1.get('myteam')
>>> type(c.get('myteam'))
<type 'str'>
>>> c.setex('myteam',10, 'warriors')
True
>>> c.get('myteam')
'warriors'
>>> c.get('myteam')
>>> c.get('myteam')
>>> c.get('myteam')
>>> c.set('myteam', 'GSW')
True
>>> c.set('mycity', 'Chongqing')
True
>>> c.mget('myteam', 'mycity')
['GSW', 'Chongqing']
>>> c.mget(['myteam', 'mycity'])
['GSW', 'Chongqing']
>>> c.mget(['myteam', 'mycity'])
['GSW', 'Chongqing']
>>> 
>>> 
>>> mydic = {'name':'Evan', 'age': 29, 'sex': 'male'}
>>> c.mset(mydic)
True
>>> c.get('age')
'29'
>>> c.set('nick','乡野亡魂')
True
>>> c.getrange('nick', 2,5)
'\xa1\xe9\x87\x8e'
>>> c.getrange('nick', 0, 3)
'\xe4\xb9\xa1\xe9'
>>> c.set('nick', u'乡野亡魂')
True
>>> (c.getrange('nick', 0,3)).decode('gbk')
u'\u6d94\uffe0'
>>> c.getrange('name', 0,3)
'Evan'
>>> c.getrange('name', 0,2)
'Eva'

>>> c.hmset('myinfo', mydic)
True
>>> c.hget('myinfo', 'name')
'Evan'
>>> c.hmget('myinfo', 'name', 'age')
['Evan', '29']
>>> c.hmget('myinfo', ['name', 'age'])
['Evan', '29']
>>> c.hgetall('myinfo')
{'age': '29', 'name': 'Evan', 'sex': 'male'}
>>> c.hlen('myinfo')
3
>>> c.hkeys('myinfo')
['age', 'name', 'sex']
>>> c.hvals('myinfo')
['29', 'Evan', 'male']
>>> c.hexists('myinfo', 'like')
False
>>> c.hset('myinfo', 'like', 'female')
1L
>>> c.hget('myinfo', 'like')
'female'
>>> c.hdel('myinfo', 'like')
1
>>> c.type('myinfo')
'hash'


>>> # list
... 
>>> c.lpush('dai', 'Evan', 'Luke', 'Joseph', 'Josie')
4L
>>> c.lrange('dai', 0, 3)
['Josie', 'Joseph', 'Luke', 'Evan']
>>> c.rpush('dai02', 'Tammy', 'Yingge', 'Leon')
3L
>>> c.llen('dai02')
3
>>> c.lrange('dai02')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: lrange() takes exactly 4 arguments (2 given)
>>> c.lrange('dai02',0,-1)
['Tammy', 'Yingge', 'Leon']
>>> c.rrange('dai02, 0 ,-2)
  File "<stdin>", line 1
    c.rrange('dai02, 0 ,-2)
                          ^
SyntaxError: EOL while scanning string literal
>>> c.rrange('dai02, 0 ,-1)
  File "<stdin>", line 1
    c.rrange('dai02, 0 ,-1)
                          ^
SyntaxError: EOL while scanning string literal
>>> c.rrange('dai02, -1 ,0)
  File "<stdin>", line 1
    c.rrange('dai02, -1 ,0)
                          ^
SyntaxError: EOL while scanning string literal
>>> c.rrange('dai02, -1 ,-3)
  File "<stdin>", line 1
    c.rrange('dai02, -1 ,-3)
                           ^
SyntaxError: EOL while scanning string literal
>>> c.lpushx('dai01', 'Mark')
0
>>> c.lpushx('dai01', 'Mark')
0
>>> c.lpushx('dai', 'Mark')
5
>>> c.lrange('dai')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: lrange() takes exactly 4 arguments (2 given)
>>> c.lrange('dai', 0, -1)
['Mark', 'Josie', 'Joseph', 'Luke', 'Evan']
>>> c.linsert('dai','after', 'Leo', 'Shallop')
-1
>>> c.lrange('dai', 0, -1)
['Mark', 'Josie', 'Joseph', 'Luke', 'Evan']
>>> c.linsert('dai','after', 'Luke', 'Shallop')
6
>>> c.lrange('dai', 0, -1)
['Mark', 'Josie', 'Joseph', 'Luke', 'Shallop', 'Evan']
>>> c.linsert('dai','before', 'Luke', 'Jack')
7
>>> c.lrange('dai', 0, -1)
['Mark', 'Josie', 'Joseph', 'Jack', 'Luke', 'Shallop', 'Evan']
>>> c.lset('dai', -1, 'Bondi')
True
>>> c.lrange('dai', 0, -1)
['Mark', 'Josie', 'Joseph', 'Jack', 'Luke', 'Shallop', 'Bondi']
>>> c.linsert('dai', 'before', 0, 'Evan')
-1
>>> p = c.lindex('dai', 0)
>>> p
'Mark'
>>> c.linsert('dai', 'before', p, 'Mayun')
8
>>> c.lrange('dai', 0, -1)
['Mayun', 'Mark', 'Josie', 'Joseph', 'Jack', 'Luke', 'Shallop', 'Bondi']
>>> c.lpop('dai')
'Mayun'
>>> c.sadd('sex', 'male', 'female', 'unknown')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/site-packages/redis/client.py", line 1600, in sadd
    return self.execute_command('SADD', name, *values)
  File "/usr/lib/python2.7/site-packages/redis/client.py", line 668, in execute_command
    return self.parse_response(connection, command_name, **options)
  File "/usr/lib/python2.7/site-packages/redis/client.py", line 680, in parse_response
    response = connection.read_response()
  File "/usr/lib/python2.7/site-packages/redis/connection.py", line 629, in read_response
    raise response
redis.exceptions.ResponseError: WRONGTYPE Operation against a key holding the wrong kind of value
>>> c.delete('sex')
1
>>> c.sadd('sex', 'male', 'female', 'unknown')
3
>>> c.scard('sex')
3
>>> c.smembers('sex')
set(['unknown', 'male', 'female'])


